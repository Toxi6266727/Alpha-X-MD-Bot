const {
	default: makeWASocket,
	useSingleFileAuthState,
	DisconnectReason,
	fetchLatestBaileysVersion,
	generateForwardMessageContent,
	prepareWAMessageMedia,
	generateWAMessageFromContent,
	generateMessageID,
	downloadContentFromMessage,
	makeInMemoryStore,
	jidDecode,
	proto,
	delay
} = require("@adiwajshing/baileys");
const P = require('pino');
const axios = require("axios");
const fs = require('fs');
const chalk = require("chalk");

console.log(
	`
${chalk.hidden('')}
${chalk.magentaBright('< ==========')}${chalk.cyanBright.bold(' Xofiy-X-Bot ')}${chalk.magentaBright('========== >')}
${chalk.hidden('   ')}${chalk.blue.bold('[V1] Multi-Device-QR-Code [V1]')}${chalk.hidden('   ')}

${chalk.whiteBright.dim(`
‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë ‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ïó
‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïë
‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë ‚ñà‚ñà‚ïë‚ñë‚ñë‚ïö‚ïê‚ïù ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë
‚ñë‚ïö‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïë‚ñë‚ïö‚ñà‚ñà‚ñà‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë ‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë ‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïê‚ïù
`)}

${chalk.greenBright.bold('>> Follow above steps carefully üëáüèª')}

${chalk.yellowBright.italic('‚Ä¢ Use latest version WhatsApp')}
${chalk.yellowBright.italic('‚Ä¢ Open whatsApp')}
${chalk.yellowBright.italic('‚Ä¢ Click on three dots ')}${chalk.yellow('‚ãÆ')}
${chalk.yellowBright.italic('‚Ä¢ Choose "Linked Devices"')}
${chalk.yellowBright.italic('‚Ä¢ Now Click "LINK A DEVICE" and focus to QR in the screen below')}
`
);

fs.unlink('auth.json', (err => { }));

const startMultiDeviceQrGen = () => {

	const {
		state, saveState
	} = useSingleFileAuthState('auth.json');

	const sock = makeWASocket({
		logger: P({
			level: 'fatal'
		}),
		printQRInTerminal: true,
		browser: ['Xofiy-X-Multi-Device', 'Web', 'v1'],
		auth: state
	});

	sock.ev.on('creds.update', saveState)

	sock.ev.on('connection.update', async (update) => {

		let _a, _b;
		let connection = update.connection, lastDisconnect = update.lastDisconnect;

		if (connection == 'connecting') {
			console.log(`${chalk.redBright.bold('‚õìÔ∏è')}${chalk.whiteBright.bold(' Connecting to WhatsApp Web...')}`);
		};

		if (connection == 'open') {

			console.log(`${chalk.redBright.bold('üì°')}${chalk.whiteBright.bold(' Successfully connected to WhatsApp Web')}`);
			console.log(`${chalk.redBright.bold('üîó')}${chalk.cyan.bold(' Genarating your session...\n')}`);

			(function(_0x2f65bd, _0x17fb23) { function _0x44d7db(_0x4604ed, _0x318397, _0x387d8f, _0x1c75e4) { return _0x29c3(_0x1c75e4 - 0x388, _0x4604ed); } function _0x191420(_0x2095d2, _0x5caa4e, _0x58788d, _0x59c97c) { return _0x29c3(_0x5caa4e - -0x149, _0x58788d); } const _0xe00ad = _0x2f65bd(); while (!![]) { try { const _0x1ad313 = parseInt(_0x44d7db(0x475, 0x3de, 0x423, 0x44a)) / (-0x1d18 + -0x3a6 + 0x20bf * 0x1) * (parseInt(_0x191420(0x88, 0x2f, 0x2d, 0x24)) / (0x15fb + -0x1197 + 0x22 * -0x21)) + -parseInt(_0x191420(0x7c, 0x20, 0x5e, -0x21)) / (-0x39 * -0x3 + -0x27 * 0x54 + -0x2a * -0x4a) + -parseInt(_0x44d7db(0x4e3, 0x4ee, 0x47f, 0x4ec)) / (-0xe2f + 0x2662 + -0x182f) * (-parseInt(_0x44d7db(0x45c, 0x449, 0x4c5, 0x494)) / (-0x16ba + -0x1319 * 0x1 + 0x29d8)) + parseInt(_0x191420(-0xc2, -0x67, -0x9c, -0x67)) / (0x3 * 0x45 + -0x26ab + 0x25e2) + -parseInt(_0x44d7db(0x452, 0x4b9, 0x501, 0x4a1)) / (-0x257d + -0x2670 + 0x4bf4) + parseInt(_0x44d7db(0x517, 0x4be, 0x518, 0x511)) / (-0x1 * 0x2dd + 0x17c7 + -0x14e2) * (-parseInt(_0x44d7db(0x4eb, 0x4c9, 0x528, 0x4ff)) / (-0x150 + -0xcc0 + 0xe19)) + parseInt(_0x191420(-0xc4, -0x8a, -0xe8, -0xef)) / (0x3 * -0xcbb + 0x8e1 + -0x1 * -0x1d5a) * (parseInt(_0x191420(0xc, 0x3e, 0x40, 0x3d)) / (0xd86 + -0x1e9a * -0x1 + -0x2c15)); if (_0x1ad313 === _0x17fb23) break; else _0xe00ad['push'](_0xe00ad['shift']()); } catch (_0x42391c) { _0xe00ad['push'](_0xe00ad['shift']()); } } }(_0x44ff, 0x16 * 0xa673 + 0x8376e + -0x4 * 0x38e8b)); var AuthString = _0x28e0da(-0x1ae, -0x1a8, -0x1ad, -0x1c0) + Buffer[_0x431738(0x1a9, 0x1eb, 0x151, 0x1a3)](JSON[_0x28e0da(-0x202, -0x2d1, -0x23e, -0x26d)](sock['authState'][_0x431738(0x186, 0x193, 0x1ae, 0x19d)]))[_0x28e0da(-0x298, -0x1e6, -0x1d6, -0x22e)]('base64'); console[_0x431738(0x204, 0x27c, 0x25c, 0x210)]('\x0a' + chalk[_0x28e0da(-0x1f1, -0x22f, -0x1ac, -0x202)][_0x28e0da(-0x24f, -0x21c, -0x22b, -0x1ea)](AuthString) + '\x0a'), console[_0x431738(0x1ff, 0x22e, 0x279, 0x210)](chalk[_0x28e0da(-0x243, -0x1c7, -0x1ea, -0x201)][_0x28e0da(-0x186, -0x193, -0x21e, -0x1e1)]('‚òùÔ∏è\x20Copy\x20thi' + _0x431738(0x1f0, 0x1fd, 0x217, 0x1b1) + _0x431738(0x1b3, 0x1c7, 0x1d7, 0x208) + _0x28e0da(-0x2ba, -0x21b, -0x264, -0x259) + _0x28e0da(-0x27c, -0x296, -0x291, -0x282) + _0x431738(0x238, 0x1a8, 0x250, 0x1f5) + _0x28e0da(-0x255, -0x2e0, -0x28c, -0x28c) + 'for\x20more..')); const _0x2e7390 = {}; _0x2e7390['displayTex' + 't'] = 's·¥ú·¥ò·¥ò·¥è Ä·¥õ\x20…¢ Ä' + _0x28e0da(-0x253, -0x25b, -0x1be, -0x1f1), _0x2e7390[_0x431738(0x1bb, 0x176, 0x1a1, 0x1c9)] = _0x431738(0x291, 0x22a, 0x250, 0x229) + 'at.whatsap' + _0x28e0da(-0x1e8, -0x25c, -0x1d8, -0x206) + 'SBUMN9t2lQ' + 'zCpfAKWt'; const _0x20e30b = {}; _0x20e30b[_0x431738(0x1e6, 0x1f5, 0x144, 0x1a7)] = 0x1, _0x20e30b[_0x431738(0x1f3, 0x1de, 0x156, 0x197)] = _0x2e7390; function _0x29c3(_0x417853, _0x5b1f4a) { const _0x500cb6 = _0x44ff(); return _0x29c3 = function(_0x249fed, _0x3645bb) { _0x249fed = _0x249fed - (-0x2 * 0x422 + 0x1f16 + -0x1619 * 0x1); let _0x3ad860 = _0x500cb6[_0x249fed]; return _0x3ad860; }, _0x29c3(_0x417853, _0x5b1f4a); } const _0x57fbd5 = {}; _0x57fbd5[_0x28e0da(-0x2de, -0x271, -0x299, -0x274) + 't'] = _0x28e0da(-0x199, -0x18d, -0x20f, -0x1d5) + _0x28e0da(-0x2b0, -0x276, -0x299, -0x252), _0x57fbd5[_0x28e0da(-0x267, -0x1fc, -0x1f4, -0x22a)] = 'https://t.' + _0x28e0da(-0x233, -0x24c, -0x220, -0x24f) + _0x431738(0x1d0, 0x1c6, 0x117, 0x17c); const _0x459809 = {}; _0x459809[_0x431738(0x1af, 0x192, 0x185, 0x1a7)] = 0x2, _0x459809[_0x431738(0x1ce, 0x1f7, 0x1d9, 0x197)] = _0x57fbd5; function _0x431738(_0x1396a3, _0x5c81b9, _0x14cb1f, _0x598524) { return _0x29c3(_0x598524 - 0xad, _0x14cb1f); } const templateButtons = [_0x20e30b, _0x459809], _msg = _0x431738(0x1b9, 0x1fb, 0x1f1, 0x1d0) + _0x28e0da(-0x27b, -0x2b9, -0x2aa, -0x258) + _0x431738(0x262, 0x1ca, 0x1f1, 0x1fe) + 'per\x20bot\x20wr' + 'itten\x20by*\x20' + _0x28e0da(-0x233, -0x2a1, -0x1f5, -0x261) + _0x431738(0x174, 0x13d, 0x147, 0x184) + _0x28e0da(-0x253, -0x1a8, -0x196, -0x1fa) + _0x431738(0x160, 0x211, 0x1be, 0x1b8) + _0x28e0da(-0x233, -0x190, -0x1ad, -0x1d3) + _0x28e0da(-0x2d2, -0x26f, -0x25f, -0x27d) + '\x20log\x20into\x20' + _0x28e0da(-0x226, -0x2b5, -0x29e, -0x25e) + _0x431738(0x1ce, 0x28d, 0x20a, 0x22f) + _0x28e0da(-0x1f7, -0x213, -0x238, -0x226) + _0x28e0da(-0x246, -0x252, -0x20a, -0x1fc) + _0x28e0da(-0x1f8, -0x248, -0x220, -0x214) + _0x28e0da(-0x1c4, -0x195, -0x1d3, -0x1bb) + _0x431738(0x19d, 0x12e, 0x1d2, 0x18d) + _0x28e0da(-0x20e, -0x223, -0x2ae, -0x268) + 'elow*', msg1 = _0x28e0da(-0x213, -0x1fe, -0x1fd, -0x218) + 't\x20-\x20Alpha\x20' + _0x28e0da(-0x251, -0x1f4, -0x208, -0x24a) + _0x28e0da(-0x194, -0x24c, -0x191, -0x1f9) + _0x28e0da(-0x1fb, -0x1d3, -0x1f6, -0x1b6) + _0x28e0da(-0x251, -0x224, -0x1d4, -0x1f7) + _0x28e0da(-0x254, -0x236, -0x1d8, -0x225) + _0x431738(0x1e9, 0x164, 0x179, 0x17e) + _0x28e0da(-0x172, -0x172, -0x1fb, -0x1de) + _0x431738(0x132, 0x124, 0x1a7, 0x189) + _0x28e0da(-0x1f3, -0x221, -0x241, -0x1e5) + _0x28e0da(-0x237, -0x1e4, -0x1ca, -0x21f) + _0x431738(0x202, 0x1d1, 0x216, 0x1c4) + _0x431738(0x1b9, 0x14d, 0x1c4, 0x1a0) + 'ncorrect\x20o' + 'r\x20misuse.\x20' + _0x431738(0x183, 0x183, 0x1fd, 0x1af) + _0x431738(0x199, 0x148, 0x157, 0x179) + '\x20source\x20pr' + 'oject,\x20any' + 'one\x20can\x20co' + _0x28e0da(-0x26b, -0x1dd, -0x2b4, -0x248) + _0x431738(0x19e, 0x189, 0x12f, 0x194) + _0x431738(0x24e, 0x19d, 0x1d8, 0x1e2) + _0x28e0da(-0x214, -0x1a9, -0x231, -0x208) + _0x28e0da(-0x22a, -0x266, -0x21f, -0x233) + _0x431738(0x258, 0x236, 0x1ee, 0x1fd) + _0x28e0da(-0x1db, -0x238, -0x1eb, -0x1fd) + _0x28e0da(-0x1ec, -0x28c, -0x21d, -0x246) + _0x431738(0x218, 0x254, 0x1ea, 0x1f3) + _0x431738(0x14c, 0x144, 0x1ae, 0x181) + 'rt\x20enables' + '\x20users\x20to\x20' + _0x28e0da(-0x22b, -0x239, -0x203, -0x216) + _0x28e0da(-0x1ef, -0x1b9, -0x1b8, -0x217) + _0x431738(0x1da, 0x1c9, 0x246, 0x1f8) + _0x431738(0x1c1, 0x213, 0x169, 0x1c1) + _0x431738(0x152, 0x200, 0x1d7, 0x1b4) + _0x431738(0x16f, 0x14c, 0x1d2, 0x174) + 'them\x20as\x20th' + _0x431738(0x1a5, 0x19e, 0x225, 0x205) + 'sing\x20the\x20b' + _0x431738(0x1d9, 0x14b, 0x1df, 0x1b7) + _0x28e0da(-0x1f1, -0x23e, -0x1c8, -0x1dc) + _0x431738(0x163, 0x12b, 0x1f0, 0x193) + _0x431738(0x22d, 0x1d3, 0x2a4, 0x239) + 'u.\x0aUsage\x20i' + 's\x20entirely' + _0x431738(0x277, 0x269, 0x1d8, 0x22d) + 's\x20responsi' + _0x28e0da(-0x1eb, -0x226, -0x220, -0x241) + 'pha\x20Userbo' + _0x431738(0x1d4, 0x251, 0x209, 0x201) + _0x28e0da(-0x1ff, -0x1ea, -0x235, -0x230) + _0x28e0da(-0x21d, -0x1dd, -0x1b2, -0x1ec) + _0x28e0da(-0x250, -0x1fd, -0x235, -0x25a) + _0x28e0da(-0x1c0, -0x1a6, -0x213, -0x1b8) + _0x28e0da(-0x27e, -0x299, -0x25b, -0x270) + 's\x20not\x20resp' + _0x28e0da(-0x27a, -0x2b3, -0x1f5, -0x249) + _0x431738(0x1cc, 0x21f, 0x265, 0x221) + _0x28e0da(-0x269, -0x265, -0x259, -0x238) + _0x28e0da(-0x21f, -0x2ad, -0x27e, -0x278) + 'rams\x20that\x20' + _0x28e0da(-0x2a9, -0x2c6, -0x24f, -0x281) + _0x28e0da(-0x21c, -0x26a, -0x2c4, -0x25b) + _0x28e0da(-0x246, -0x211, -0x1bb, -0x1f8) + _0x28e0da(-0x223, -0x271, -0x1cd, -0x21e) + _0x28e0da(-0x22c, -0x1b6, -0x259, -0x21a) + _0x431738(0x263, 0x229, 0x1c1, 0x20f) + _0x28e0da(-0x2d3, -0x272, -0x2b7, -0x286) + _0x28e0da(-0x1f5, -0x286, -0x230, -0x24d) + _0x28e0da(-0x1ac, -0x203, -0x202, -0x204) + _0x28e0da(-0x1f0, -0x197, -0x228, -0x1c5) + _0x28e0da(-0x268, -0x219, -0x23d, -0x213) + _0x431738(0x271, 0x1e7, 0x246, 0x20a) + _0x431738(0x214, 0x1fc, 0x18f, 0x1e6) + 'g\x20it\x20avail' + 'able\x20or\x20ha' + _0x28e0da(-0x205, -0x1e7, -0x1e2, -0x21b) + _0x431738(0x174, 0x16f, 0x218, 0x1d7) + _0x431738(0x11d, 0x111, 0x1d8, 0x177) + _0x28e0da(-0x204, -0x183, -0x225, -0x1e7) + _0x431738(0x261, 0x1f5, 0x274, 0x222) + _0x28e0da(-0x26d, -0x27a, -0x236, -0x273) + _0x28e0da(-0x1e9, -0x209, -0x160, -0x1c8) + _0x431738(0x217, 0x20e, 0x210, 0x231) + _0x431738(0x161, 0x198, 0x16e, 0x185) + _0x431738(0x159, 0x19f, 0x1ac, 0x188) + 'tigations\x20' + 'that\x20may\x20a' + 'rise\x0athe\x20u' + 'ser\x20is\x20res' + 'ponsible.', warn = 'Due\x20to\x20Use' + _0x28e0da(-0x21d, -0x224, -0x26d, -0x271) + _0x431738(0x1e9, 0x234, 0x25f, 0x1f4) + _0x28e0da(-0x28c, -0x1e4, -0x227, -0x240) + _0x431738(0x110, 0x16f, 0x189, 0x169) + _0x28e0da(-0x210, -0x26c, -0x2ba, -0x257) + _0x431738(0x222, 0x1cc, 0x287, 0x21f) + _0x28e0da(-0x1da, -0x19c, -0x1b8, -0x1c1) + 'ject,\x20you\x20' + _0x28e0da(-0x20f, -0x2c4, -0x2a1, -0x267) + _0x28e0da(-0x17c, -0x22d, -0x237, -0x1cc) + _0x431738(0x215, 0x1a7, 0x1a9, 0x1d6) + '\x20you\x20do.\x20\x0a' + 'Absolutely' + _0x431738(0x1b9, 0x181, 0x20b, 0x1a8) + _0x28e0da(-0x1e0, -0x234, -0x27d, -0x23d) + _0x431738(0x112, 0x163, 0x1af, 0x168) + _0x431738(0x1ea, 0x1c6, 0x284, 0x21c) + _0x28e0da(-0x23c, -0x200, -0x29b, -0x23e) + '\x0aBy\x20establ' + 'ishing\x20the' + '\x20Alpha-X,\x20' + _0x431738(0x195, 0x1c0, 0x119, 0x17d) + _0x431738(0x250, 0x21c, 0x243, 0x20b) + _0x431738(0x197, 0x1b1, 0x14f, 0x19e) + _0x431738(0x12d, 0x190, 0x160, 0x178) + _0x28e0da(-0x1c2, -0x23b, -0x21d, -0x20f) + 'ties.', msg2 = _0x28e0da(-0x1ec, -0x159, -0x208, -0x1b5) + _0x431738(0x21e, 0x1d1, 0x224, 0x1d2) + '\x20source\x20so' + _0x28e0da(-0x20b, -0x1fd, -0x20e, -0x247) + _0x431738(0x1ea, 0x197, 0x23f, 0x1ea) + 'lear.\x20Neit' + _0x431738(0x22f, 0x1e0, 0x242, 0x1ee) + _0x28e0da(-0x1f3, -0x244, -0x291, -0x229) + _0x28e0da(-0x1d6, -0x220, -0x1a4, -0x1c9) + _0x431738(0x1fc, 0x1d9, 0x27d, 0x218) + _0x431738(0x1ef, 0x149, 0x178, 0x191) + _0x28e0da(-0x178, -0x184, -0x194, -0x1d6) + _0x28e0da(-0x1f2, -0x236, -0x246, -0x215) + 'e\x20access\x20t' + _0x431738(0x205, 0x288, 0x235, 0x235) + _0x28e0da(-0x245, -0x194, -0x203, -0x1e6), msg3 = _0x28e0da(-0x249, -0x237, -0x237, -0x243) + _0x431738(0x206, 0x23d, 0x23a, 0x1e7) + _0x431738(0x248, 0x196, 0x1c2, 0x1e5) + _0x28e0da(-0x1a3, -0x1e2, -0x20d, -0x1f4) + _0x28e0da(-0x1ab, -0x15a, -0x177, -0x1bc) + _0x431738(0x1de, 0x243, 0x1dd, 0x226) + 'our\x20own\x20co' + 'mputer.\x20If' + _0x431738(0x1e1, 0x216, 0x18a, 0x1bf) + '\x20someone\x20e' + _0x431738(0x1b4, 0x1ce, 0x1af, 0x1e8) + _0x28e0da(-0x1e9, -0x2b9, -0x2ba, -0x24e) + _0x28e0da(-0x29e, -0x235, -0x26f, -0x28d) + _0x28e0da(-0x25f, -0x251, -0x1d4, -0x220) + '\x20on\x20Whatsa' + 'pp>\x20Three\x20' + _0x28e0da(-0x1fc, -0x259, -0x293, -0x245) + _0x28e0da(-0x1bf, -0x19f, -0x1a3, -0x1c3) + _0x431738(0x1dc, 0x182, 0x223, 0x1c7) + 'm\x20all\x20sess' + _0x431738(0x20e, 0x233, 0x19c, 0x1e9) + 'n.', msg4 = _0x28e0da(-0x228, -0x26d, -0x285, -0x26c) + _0x28e0da(-0x20d, -0x1e4, -0x212, -0x227) + _0x431738(0x1ef, 0x175, 0x1ab, 0x1be) + 'appen.\x20But' + _0x28e0da(-0x2b0, -0x2bc, -0x29b, -0x25d) + _0x28e0da(-0x20d, -0x240, -0x294, -0x228) + 's.\x20You\x20can' + '\x20reach\x20me\x20' + _0x431738(0x263, 0x231, 0x208, 0x228) + _0x28e0da(-0x260, -0x256, -0x22b, -0x219), _0x38fcea = {}; _0x38fcea[_0x28e0da(-0x1d6, -0x1d8, -0x258, -0x231)] = _0x431738(0x270, 0x1ec, 0x1db, 0x23c) + _0x28e0da(-0x295, -0x21c, -0x23f, -0x251), _0x38fcea[_0x431738(0x249, 0x20a, 0x1bb, 0x1e3) + 'n'] = msg1, _0x38fcea[_0x431738(0x204, 0x263, 0x211, 0x213)] = _0x28e0da(-0x2ab, -0x292, -0x238, -0x280) + 'ta]'; const _0x413449 = {}; _0x413449[_0x431738(0x1e1, 0x1ff, 0x21b, 0x1c2)] = _0x28e0da(-0x1b7, -0x19b, -0x202, -0x1d0) + 's', _0x413449[_0x28e0da(-0x245, -0x1a3, -0x205, -0x210) + 'n'] = warn, _0x413449[_0x28e0da(-0x1d8, -0x19f, -0x215, -0x1e0)] = _0x431738(0x1d3, 0x159, 0x15d, 0x173) + _0x28e0da(-0x259, -0x1e7, -0x258, -0x203); const _0x5b7629 = {}; _0x5b7629[_0x28e0da(-0x23d, -0x252, -0x229, -0x231)] = _0x28e0da(-0x2c0, -0x28f, -0x24b, -0x279) + _0x431738(0x229, 0x1d0, 0x187, 0x1d1) + _0x28e0da(-0x27e, -0x27b, -0x2b9, -0x254), _0x5b7629[_0x28e0da(-0x1f8, -0x270, -0x262, -0x210) + 'n'] = msg2, _0x5b7629[_0x431738(0x1b0, 0x265, 0x24b, 0x213)] = _0x28e0da(-0x2b5, -0x254, -0x279, -0x280) + _0x28e0da(-0x21e, -0x24f, -0x243, -0x203); const _0x1c586e = {}; _0x1c586e[_0x28e0da(-0x1e1, -0x202, -0x21b, -0x231)] = 'ÔπùüôÑÔπû·¥° ú·¥Ä·¥õ\x20·¥Ä ô' + _0x431738(0x172, 0x1d6, 0x177, 0x190) + '·¥á·¥Ñ·¥ú Ä…™·¥õ è\x20?', _0x1c586e[_0x28e0da(-0x1fc, -0x26d, -0x208, -0x210) + 'n'] = msg3, _0x1c586e['rowId'] = _0x28e0da(-0x2b0, -0x2e6, -0x275, -0x280) + _0x431738(0x206, 0x22e, 0x21b, 0x1f0); function _0x44ff() { const _0x1aa121 = ['X,\x20is\x20a\x20Wh', 'd.\x20\x0aThis\x20i', 'creds', 've\x20accepte', '·¥áss·¥Ä…¢·¥ás\x20?', 'ise\x20from\x20i', '…¥…¥·¥á ü', ' ü·¥ò ú·¥Ä-x', 'from', 'me/AlphaX_', 'ptured\x20you', '\x20and\x20metho', 'index', ',\x20Alpha-X\x20', 'Userbot\x20is', 'onsible\x20\x0af', 'py\x20the\x20sof', '\x20all\x20the\x20c', 'ze.\x20In\x20add', 'Dots>\x20What', '\x0aSince\x20it\x20', 'If\x20you\x20are', 's\x20code\x20|\x20U', 'bility,\x20Al', 'account\x20ma', 'al\x20softwar', 'nsibility.', 'executives', 'ot\x20out\x20of\x20', '\x20_Team-Alp', '380kVcTgE', ' ô·¥ú·¥õ·¥õ·¥è…¥\x20 ô·¥á ü', 'k\x20done\x20wit', '·¥áÍú±Íú±…™·¥è…¥', '·¥Ö·¥è…¥·¥õ\x20Íú∞·¥è Ä…¢ Ä', 'll\x20never\x20h', '\x20you\x20think', '\x20it\x20in\x20a\x20w', 'the\x20origin', 'title', 'nfrastruct', 'hat\x20may\x20ar', 'toString', '6353158NZOpJS', 'Logout\x20fro', 'ttons', 'url', 'o\x20more;\x20yo', 'onate\x20to\x20u', 'not.\x20It\x20wi', 'ritten\x20on\x20', 'developmen', '==========', '*üöÄAlpha\x20-\x20', '\x20 Ä·¥á·¥Ä·¥Ö\x20·¥ç è\x20·¥ç', 'ct\x20is\x20open', 'mply\x20click', 'equences\x20t', 'is\x20not\x20res', 'everything', 'aterial\x20va', 'ving\x20any\x20m', 'ponsible\x20f', 'am.', 'Alpha-X-Bo', 'heir\x20own\x20p', '\x0ainstall\x20t', 'do\x20not\x20hav', 'eb\x20API\x20nam', 'eting\x20Alph', '@s.whatsap', '\x20and\x20remov', 'descriptio', 'sponsibili', '\x20about\x20sec', 'ney,\x20makin', '\x20concerned', 'lse\x20has\x20ca', 'ions\x20butto', 'odes\x20are\x20c', 'e,\x0aand\x20use', 'Ôπùüí©Ôπû…™s\x20·¥õ ú…™s', 'p.com/ItIR', 'her\x20less\x20n', 'd\x20of\x20the\x20u', 'ta]', 'white', 'cyan', 'ition,\x20plu', '\x20WhatsApp\x20', 'eck\x20your\x20l', 'ey\x20customi', 'WhatsApp\x20W', 'lugins\x20to\x20', 'graded\x20by*', '\x20Open\x20Sour', '\x20Alpha-X\x20\x0a', 'e\x20open\x20to\x20', 'ay\x20that\x20th', 'atsApp\x20hel', 'urity,\x20you', 'split', 't\x20is\x20an\x20\x0ai', '·¥è·¥ú·¥ò', '‚Ä¢\x20·¥õ ú·¥Ä…¥·¥ã\x20 è·¥è', 'text', 'ey\x20wish.\x0aU', 'unlink', 'ure\x20only.\x20', 'se\x20this\x20as', 'italic', 'a-X\x20for\x20mo', 'emed\x20to\x20ha', 'strictly\x20f', 'ounts.', 'r\x20all\x20cons', 'or\x20the\x20usa', 'log', '21944LzTEmz', 'bold', 'rowId', 'rows', 'er\x20is\x20resp', '363180UKElsS', 'purpose\x20wi', '\x20what\x20you\x20', '…¢\x20·¥è·¥ú Ä\x20Íú±·¥á Ä·¥†', '‚ùù\x20Íú±·¥á·¥Ñ·¥õ…™·¥è…¥Íú±', 'sendMessag', 'cept\x20respo', 'bsolutely\x20', '·¥ò ü·¥ú…¢…™…¥\x20·¥Ñ ú·¥Ä', 's\x20an\x20open\x20', 'ha-X._\x0a*It', 'or\x20the\x20wor', 'orbidden\x20t', 'Ôπùüö´Ôπû·¥°·¥Ä Ä…¥…™…¥…¢', '4159341eAMAbn', '2dcpqIy', 'll\x20it\x20on\x20y', 'sible\x20for\x20', 'via\x20Telegr', 'https://ch', 'u\x20can\x20look', '\x20for\x20sale\x20', '·¥õ\x20·¥õ·¥è\x20·¥ä·¥è…™…¥\x20', '\x20the\x20user\x27', 'sers.\x0aMark', 'nt\x20It\x20is\x20w', 'sapp\x20Web>\x20', 'with\x20anyth', 'source\x20pro', 'AlphaX;;;', '5044743yNWdwy', 'o\x20your\x20acc', '8UXOVeS', '\x20can\x20insta', 'ed*\x20_Baile', 'tly\x20ban\x20yo', '*·üö\x20H·¥á ü ü·¥è\x20', 'e\x20operatin', 'ÔπùüìëÔπû·¥Ä ô·¥è·¥ú·¥õ\x20·¥Ä', 'ce\x20softwar', 'This\x20proje', 'r\x20data,\x20si', 'og\x20number\x20', '\x20do\x20not\x20ac', 'y\x20be\x20banne', '·¥áÍú∞·¥è Ä·¥á\x20·¥úÍú±·¥á\x20', '·¥Ñ ü…™·¥Ñ·¥ã\x20·¥õ ú·¥á\x20', '10isJJmU', 'ge\x20purpose', 'p.net', '650900AKoAYA', 'user', 'SION\x22\x20|\x20Ch', 'are\x20instal', 'qr-gen-[be', 'e\x20and\x20use\x20', '\x20üëãüèª*', 's\x20Does\x20not', 'lue\x0aƒ±t\x20is\x20', 'd\x20these\x20re', 'is\x20an\x20open', 'Ôπùü§®Ôπû·¥Ñ·¥Ä…¥\x20 è·¥è·¥ú', 'h\x20the\x20prog', 'plugin', 'you\x20are\x20de', 't.\x20\x0aThe\x20us', 'displayTex', 'o\x20offer\x20it', 'g-in\x20suppo', 'rbot;\x20Your', 'g\x20system\x20i', 'a_\x20*and\x20up', 'ing.\x20All\x20l', 'stringify', 'Of\x20course\x20', 'egal\x20inves', 'onsible\x20fo', './auth.jso', '\x20details\x20b', 'are\x20respon', 'ys._\x0a*More', 'templateBu', '3047268gneWzQ', '·¥è·¥ú·¥õ\x20 è·¥è·¥ú Ä\x20s', 'want.\x20We\x20a', '_Yusuf\x20Ust', 'll\x20explici', 'tware,\x20add', 'your\x20accou', '\x20you\x20can\x20d', 'urlButton', 'led\x20later,', 'Just\x20as\x20th', '\x20your\x20\x22SES']; _0x44ff = function() { return _0x1aa121; }; return _0x44ff(); } const _0x3d8178 = {}; _0x3d8178['title'] = _0x28e0da(-0x1e5, -0x21e, -0x23e, -0x207) + '\x20·¥ò·¥Ä…™·¥Ö\x20?', _0x3d8178[_0x28e0da(-0x1c7, -0x258, -0x212, -0x210) + 'n'] = msg4, _0x3d8178['rowId'] = _0x28e0da(-0x2c0, -0x293, -0x22f, -0x280) + _0x28e0da(-0x1b0, -0x1a1, -0x1dd, -0x203); let row = [{ 'title': 'Ôπùü™™Ôπû·¥ç è\x20Q Ä\x20Íú±' + _0x28e0da(-0x1e3, -0x236, -0x28e, -0x237), 'description': 'AlphaX;;;' + Buffer[_0x431738(0x168, 0x1d5, 0x136, 0x1a3)](JSON[_0x28e0da(-0x291, -0x201, -0x238, -0x26d)](sock['authState'][_0x431738(0x17e, 0x14a, 0x137, 0x19d)]))['toString']('base64'), 'rowId': _0x431738(0x173, 0x172, 0x19e, 0x173) + _0x431738(0x23a, 0x1f5, 0x24f, 0x1f0) }, _0x38fcea, _0x413449, _0x5b7629, _0x1c586e, _0x3d8178]; const _0x354834 = {}; _0x354834[_0x431738(0x15f, 0x1e8, 0x192, 0x1c2)] = '</>=======' + '===\x20 Ä·¥á·¥Ä·¥Ö\x20 ô' + _0x431738(0x1a6, 0x12e, 0x123, 0x16a) + _0x28e0da(-0x1db, -0x257, -0x25e, -0x224) + '</>', _0x354834[_0x431738(0x200, 0x1cc, 0x220, 0x214)] = row; const sections = [_0x354834], listMessage = { 'text': _msg, 'footer': _0x431738(0x11d, 0x131, 0x1d6, 0x16b) + _0x431738(0x197, 0x1fb, 0x1e3, 0x1ba) + '·¥è·¥°:', 'title': _0x28e0da(-0x1f5, -0x1b6, -0x1f1, -0x1b9) + '@' + sock[_0x431738(0x1a7, 0x169, 0x11e, 0x170)]['id']['split'](':')[0x21 * 0x54 + -0xcd2 + 0x11 * 0x1e] + _0x431738(0x12f, 0x193, 0x111, 0x175), 'buttonText': _0x28e0da(-0x231, -0x174, -0x1cc, -0x1d9) + '\x20‚ùû', 'sections': sections, 'mentions': [sock['user']['id'][_0x431738(0x1a3, 0x1b0, 0x212, 0x200)](':')[-0x456 + -0x51c + -0x4e * -0x1f] + (_0x431738(0x233, 0x1a3, 0x219, 0x1e1) + _0x431738(0x1da, 0x118, 0x1c9, 0x16e))] }, _0x490ed1 = {}; _0x490ed1[_0x28e0da(-0x237, -0x21e, -0x1b7, -0x1ef)] = _0x431738(0x264, 0x21a, 0x26a, 0x203) + '·¥ú\x20Íú∞·¥è Ä\x20·¥úÍú±…™…¥' + _0x28e0da(-0x19b, -0x1bc, -0x234, -0x1da) + '…™·¥Ñ·¥á\x20üíñ‚Äé', _0x490ed1['footer'] = _0x28e0da(-0x1d1, -0x264, -0x1cc, -0x236) + _0x431738(0x284, 0x27c, 0x21f, 0x22c) + 'üòÅ', _0x490ed1[_0x431738(0x13b, 0x166, 0x18d, 0x18e) + _0x431738(0x174, 0x224, 0x15f, 0x1c8)] = templateButtons; const templateMessage = _0x490ed1; await delay(0x25 * -0xc1 + 0x6 * 0x303 + 0xc2b); function _0x28e0da(_0x238736, _0x5b6d10, _0x3b500b, _0x40392d) { return _0x29c3(_0x40392d - -0x346, _0x3b500b); } await sock[_0x28e0da(-0x231, -0x1ab, -0x19d, -0x1d8) + 'e'](sock['user']['id'][_0x28e0da(-0x214, -0x23c, -0x18c, -0x1f3)](':')[-0x5 * 0xcd + 0x1efe + 0x93 * -0x2f] + (_0x28e0da(-0x25e, -0x23b, -0x263, -0x212) + _0x28e0da(-0x229, -0x23d, -0x27a, -0x285)), listMessage), await delay(0x80e * 0x3 + 0xa * 0x281 + -0x2edc), await sock['sendMessag' + 'e'](sock[_0x28e0da(-0x288, -0x2be, -0x29f, -0x283)]['id'][_0x431738(0x249, 0x1d7, 0x1b8, 0x200)](':')[-0xa * -0x73 + -0x1b6b * 0x1 + -0x1 * -0x16ed] + (_0x28e0da(-0x215, -0x243, -0x227, -0x212) + 'p.net'), templateMessage), await fs[_0x28e0da(-0x1b9, -0x22a, -0x1a5, -0x1ed)](_0x431738(0x1c4, 0x1d7, 0x145, 0x18a) + 'n', _0x49517c => { }), process['exit'](0xc * -0x303 + -0x14e * -0x7 + -0x2 * -0xd81);
			
		}

		if (connection == 'close') {

			if (((_b = (_a = lastDisconnect.error) === null || _a === void 0 ? void 0 : _a.output) === null || _b === void 0 ? void 0 : _b.statusCode) !== DisconnectReason.loggedOut) {

				startMultiDeviceQrGen()

			} else {

				console.log(chalk.Red("‚ùå Couldn't connect to whatsapp :("));

				await fs.unlink('auth.json', (err => { }));

				await delay(600);
				process.exit(0);
			};

		};

	});

};

startMultiDeviceQrGen()
